#!/bin/sh
# ----------------------------------------------------------------------------
# Laja Start Up Batch script
#
# Required ENV vars:
# ------------------
#   JAVA_HOME - location of a JDK home dir
#
# Optional ENV vars
# -----------------
#   LAJA_HOME - location of laja's installed home dir
#   LAJA_OPTS - parameters passed to the Java VM when running Laja
#     e.g. to debug Laja itself, use
#       set LAJA_OPTS=-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
# ----------------------------------------------------------------------------

ARGS=""
while [ "$1" != "" ] ; do

  ARGS="$ARGS $1"
  shift

done

# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
mingw=false
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  MINGW*) mingw=true;;
  Darwin*) darwin=true 
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
           fi
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

if [ -z "$LAJA_HOME" ] ; then
  ## resolve links - $0 may be a link to laja's home
  PRG="$0"

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
    else
      PRG="`dirname "$PRG"`/$link"
    fi
  done

  saveddir=`pwd`

  LAJA_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  LAJA_HOME=`cd "$LAJA_HOME" && pwd`

  cd "$saveddir"
  # echo Using laja at $LAJA_HOME
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$LAJA_HOME" ] &&
    LAJA_HOME=`cygpath --unix "$LAJA_HOME"`
  [ -n "$JAVA_HOME" ] &&
    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] &&
    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# For Migwn, ensure paths are in UNIX format before anything is touched
if $mingw ; then
  [ -n "$LAJA_HOME" ] &&
    LAJA_HOME="`(cd "$LAJA_HOME"; pwd)`"
  [ -n "$JAVA_HOME" ] &&
    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
  # TODO classpath?
fi

if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD="`which java`"
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly."
  echo "  We cannot execute $JAVACMD"
  exit 1
fi

LAJA_LAUNCHER=net.sf.laja.launch.LajaLauncher

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$LAJA_HOME" ] &&
    LAJA_HOME=`cygpath --path --windows "$LAJA_HOME"`
  [ -n "$JAVA_HOME" ] &&
    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] &&
    HOME=`cygpath --path --windows "$HOME"`
fi

LAJA_CLASSPATH=

if [ `ls $LAJA_HOME/lib/*.jar 2>/dev/null | wc -l` -ge 1 ]; then
  for i in `ls $LAJA_HOME/lib/*.jar`
  do
    LAJA_CLASSPATH=${LAJA_CLASSPATH}${i}:
  done
fi

for i in `ls $LAJA_HOME/system-lib/*.jar`
do
  LAJA_CLASSPATH=${LAJA_CLASSPATH}${i}:
done

exec "$JAVACMD" \
  $LAJA_OPTS \
  -classpath "${LAJA_CLASSPATH}" \
  "-Dlaja.home=${LAJA_HOME}"  \
  ${LAJA_LAUNCHER} $ARGS
