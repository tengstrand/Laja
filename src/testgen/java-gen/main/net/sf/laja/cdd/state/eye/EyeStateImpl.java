package net.sf.laja.cdd.state.eye;

import java.math.BigDecimal;
import net.sf.laja.cdd.state.Certificate;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.tengstrand.nu
 */
public class EyeStateImpl implements EyeState {
    protected int eyeWeightInGrams;
    protected String color;
    protected String decease; // (hide)
    protected Boolean hasEar; // (optional)

    private boolean _encapsulated = false;
    private Object _encapsulator;

    EyeStateImpl() {
    }

    public EyeStateImpl(Certificate certificate) {
        this();
        if (certificate == null) {
            throw new IllegalArgumentException("Certificate can not be null");
        }
    }

    public static EyeStateBuilder build() {
        return new EyeStateBuilderImpl();
    }

    public static EyeStateBuilder build(EyeState state) {
        return new EyeStateBuilderImpl(state);
    }

    public Certificate certificate() {
        return Certificate.get(this);
    }

    public boolean isValid() {
        return isValid(_encapsulated);
    }

    public boolean isValidAsEncapsulated() {
        return isValid(true);
    }

    private boolean isValid(boolean encapsulated) {
        if (color == null
           || (encapsulated && decease == null)) {
            return false;
        }
        return true;
    }

    // Getters
    public int getEyeWeightInGrams() { return eyeWeightInGrams; }
    public String getColor() { return color; }
    public String getDecease() { return decease; }
    public Boolean getHasEar() { return hasEar; }

    // Setters
    public void setEyeWeightInGrams(int eyeWeightInGrams, Object mutator) { checkMutator(mutator); this.eyeWeightInGrams = eyeWeightInGrams; }
    public void setColor(String color, Object mutator) { checkMutator(mutator); this.color = color; }
    public void setDecease(String decease, Object mutator) { checkMutator(mutator); this.decease = decease; }
    public void setHasEar(Boolean hasEar, Object mutator) { checkMutator(mutator); this.hasEar = hasEar; }

    private void checkMutator(Object mutator) {
        if (mutator != _encapsulator) {
            throw new IllegalStateException("The state can only be mutated by current instance of " + (_encapsulator == null ? null : _encapsulator.getClass().getName()));
        }
    }


    public void encapsulate() {
        _encapsulated = true;
    }

    public void setEncapsulator(Object encapsulator) {
        _encapsulator = encapsulator;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;

        EyeStateImpl state = (EyeStateImpl)obj;

        if (eyeWeightInGrams != state.getEyeWeightInGrams()) return false;
        if (color != null ? !color.equals(state.color) : state.color != null) return false;
        if (decease != null ? !decease.equals(state.decease) : state.decease != null) return false;
        if (hasEar != null ? !hasEar.equals(state.hasEar) : state.hasEar != null) return false;

        return true;
    }

    public boolean equalsValue(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;

        EyeStateImpl state = (EyeStateImpl)obj;

        if (eyeWeightInGrams != state.getEyeWeightInGrams()) return false;
        if (color != null ? !color.equals(state.color) : state.color != null) return false;
        if (decease != null ? !decease.equals(state.decease) : state.decease != null) return false;
        if (hasEar != null ? !hasEar.equals(state.hasEar) : state.hasEar != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = eyeWeightInGrams;
        result = 31 * result + (color != null ? color.hashCode() : 0);
        result = 31 * result + (decease != null ? decease.hashCode() : 0);
        result = 31 * result + (hasEar != null ? hasEar.hashCode() : 0);

        return result;
    }

    @Override
    public String toString() {
        return "{eyeWeightInGrams=" + eyeWeightInGrams +
                ", color=" + (color == null ? null : '\'' + color + '\'' ) +
                ", decease=" + (decease == null ? null : '\'' + decease + '\'' ) +
                ", hasEar=" + hasEar + "}";
    }
}
