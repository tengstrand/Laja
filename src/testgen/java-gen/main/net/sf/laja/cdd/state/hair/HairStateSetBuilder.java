package net.sf.laja.cdd.state.hair;

import net.sf.laja.cdd.state.Certificate;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.tengstrand.nu
 */
public final class HairStateSetBuilder {
    private final Certificate certificate;
    private final HairStateSet states;

    public HairStateSetBuilder() {
        certificate = Certificate.get(new HairStateImpl());
        states = HairStateHashSet.emptySet();
    }

    public HairStateSetBuilder(HairStateSet states) {
        this.states = states;
        certificate = Certificate.get(new HairStateImpl());
    }

    public HairStateSet getStateSet(Certificate certificate) {
        return states;
    }

    public List<HairStateBuilder> getStateBuilders() {
        List<HairStateBuilder> builders = new ArrayList<HairStateBuilder>(states.size());

        for (HairState state : states) {
            builders.add(new HairStateBuilderImpl(state));
        }
        return builders;
    }

    public int size() {
        return states.size();
    }

    public void clear() {
        states.clear();
    }

    public void add(HairStateBuilder builder) {
        states.add(builder.getHairState(certificate));
    }

    public void add(HairState state) {
        states.add(state);
    }

    public boolean remove(HairState state) {
        return states.remove(state);
    }

    public void remove(int index) {
        states.remove(index);
    }

    public void retainAll(HairStateSetBuilder retainStates) {
        states.retainAll(retainStates.states);
    }

    @Override
    public String toString() {
        return "HairStateSetBuilder{" + states + "}";
    }
}
