package net.sf.laja.cdd.state.arm;

import net.sf.laja.cdd.state.Certificate;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.sf.net
 */
public class ArmStateImpl implements ArmState {
    protected int armLength = -1; // (optional)
    protected double armWeight;

    private boolean _encapsulated = false;

    ArmStateImpl() {
    }

    public static ArmStateBuilder build() {
        return new ArmStateBuilderImpl();
    }

    public static ArmStateBuilder build(ArmState state) {
        return new ArmStateBuilderImpl(state);
    }

    public boolean isValid() {
        return isValid(_encapsulated);
    }

    public boolean isValidAsEncapsulated() {
        return isValid(true);
    }

    private boolean isValid(boolean encapsulated) {
        return true;
    }

    // Getters
    public int getArmLength() { return armLength; }
    public double getArmWeight() { return armWeight; }

    // Setters
    public void setArmLength(int armLength) { this.armLength = armLength; }
    public void setArmWeight(double armWeight) { this.armWeight = armWeight; }

    public void encapsulate() {
        _encapsulated = true;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        ArmStateImpl state = (ArmStateImpl)o;

        if (armLength != state.getArmLength()) return false;
        if (armWeight != state.getArmWeight()) return false;

        return true;
    }

    public boolean valueEquals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        ArmStateImpl state = (ArmStateImpl)o;

        if (armLength != state.getArmLength()) return false;
        if (armWeight != state.getArmWeight()) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = armLength;
        result = 31 * result + (int)armWeight;

        return result;
    }

    public int valueHashCode() {
        int result = armLength;
        result = 31 * result + (int)armWeight;

        return result;
    }

    @Override
    public String toString() {
        return "{armLength=" + armLength +
                ", armWeight=" + armWeight + "}";
    }
}
