package net.sf.laja.cdd.state.arm;

import net.sf.laja.cdd.state.hand.HandStateList;
import net.sf.laja.cdd.state.hand.HandStateListBuilder;
import net.sf.laja.cdd.state.Certificate;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.tengstrand.nu
 */
public class ArmStateBuilderImpl implements ArmStateBuilder {
    private Object encapsulator;
    private ArmState state;
    private final Certificate certificate;
    private HandStateListBuilder handsStateListBuilder;

    ArmStateBuilderImpl() {
        state = new ArmStateImpl();
        certificate = Certificate.get(this);
    }

    public ArmStateBuilderImpl(ArmState state) {
        this.state = state;
        certificate = Certificate.get(this);
    }

    public ArmStateBuilderImpl(ArmState state, Object encapsulator) {
        this(state);
        this.encapsulator = encapsulator;
    }

    public void withArmLength(int armLength) {
        state.setArmLength(armLength, encapsulator);
    }

    public void withArmWeight(double armWeight) {
        state.setArmWeight(armWeight, encapsulator);
    }

    public void withHands(net.sf.laja.cdd.state.hand.HandStateListBuilder listBuilder) {
        state.setHands(listBuilder.getStateList(certificate), encapsulator);
    }

    public HandStateListBuilder getHandsStateListBuilder() {
        if (handsStateListBuilder == null) {
            handsStateListBuilder = new HandStateListBuilder(state.getHands());
        }
        return handsStateListBuilder;
    }

    public boolean isValid() {
        return state.isValid();
    }

    public Object as(ArmBehaviourFactory factory, Object... args) {
        return factory.create(state, args);
    }

    public ArmState getArmState(net.sf.laja.cdd.state.Certificate certificate) {
        return state;
    }

    @Override
    public String toString() {
        return state.toString();
    }
}
