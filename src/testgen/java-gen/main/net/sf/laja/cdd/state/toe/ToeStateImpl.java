package net.sf.laja.cdd.state.toe;

import net.sf.laja.cdd.state.Certificate;
import net.sf.laja.cdd.state.Certificate;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.sf.net
 */
public class ToeStateImpl implements ToeState {
    protected int length; // (key)
    protected int weight;

    private boolean _encapsulated = false;

    ToeStateImpl() {
    }

    public static ToeStateBuilder build() {
        return new ToeStateBuilderImpl();
    }

    public static ToeStateBuilder build(ToeState state) {
        return new ToeStateBuilderImpl(state);
    }

    public Certificate certificate() {
        return Certificate.get(this);
    }

    public boolean isValid() {
        return isValid(_encapsulated);
    }

    public boolean isValidAsEncapsulated() {
        return isValid(true);
    }

    private boolean isValid(boolean encapsulated) {
        return true;
    }

    // Getters
    public int getLength() { return length; }
    public int getWeight() { return weight; }

    // Setters
    public void setLength(int length) { this.length = length; }
    public void setWeight(int weight) { this.weight = weight; }

    public void encapsulate() {
        _encapsulated = true;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        ToeStateImpl state = (ToeStateImpl)o;

        if (length != state.getLength()) return false;

        return true;
    }

    public boolean valueEquals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        ToeStateImpl state = (ToeStateImpl)o;

        if (length != state.getLength()) return false;
        if (weight != state.getWeight()) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = length;

        return result;
    }

    public int valueHashCode() {
        int result = length;
        result = 31 * result + weight;

        return result;
    }

    @Override
    public String toString() {
        return "{length=" + length +
                ", weight=" + weight + "}";
    }
}
