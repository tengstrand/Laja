package net.sf.laja.cdd.state.leg;

import net.sf.laja.cdd.state.Certificate;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.tengstrand.nu
 */
public final class LegStateSetBuilder {
    private final Certificate certificate;
    private final LegStateSet states;

    public LegStateSetBuilder() {
        certificate = Certificate.get(new LegStateImpl());
        states = LegStateHashSet.emptySet();
    }

    public LegStateSetBuilder(LegStateSet states) {
        this.states = states;
        certificate = Certificate.get(new LegStateImpl());
    }

    public LegStateSet getStateSet(Certificate certificate) {
        return states;
    }

    public List<LegStateBuilder> getStateBuilders() {
        List<LegStateBuilder> builders = new ArrayList<LegStateBuilder>(states.size());

        for (LegState state : states) {
            builders.add(new LegStateBuilderImpl(state));
        }
        return builders;
    }

    public int size() {
        return states.size();
    }

    public void clear() {
        states.clear();
    }

    public void add(LegStateBuilder builder) {
        states.add(builder.getLegState(certificate));
    }

    public void add(LegState state) {
        states.add(state);
    }

    public boolean remove(LegState state) {
        return states.remove(state);
    }

    public void remove(int index) {
        states.remove(index);
    }

    public void retainAll(LegStateSetBuilder retainStates) {
        states.retainAll(retainStates.states);
    }

    @Override
    public String toString() {
        return "LegStateSetBuilder{" + states + "}";
    }
}
