package net.sf.laja.cdd.state.animal;

import net.sf.laja.cdd.state.Certificate;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.sf.net
 */
public class AnimalStateImpl implements AnimalState {
    protected boolean isTerrestrial;

    private boolean _encapsulated = false;

    AnimalStateImpl() {
    }

    public static AnimalStateBuilder build() {
        return new AnimalStateBuilderImpl();
    }

    public static AnimalStateBuilder build(AnimalState state) {
        return new AnimalStateBuilderImpl(state);
    }

    public boolean isValid() {
        return isValid(_encapsulated);
    }

    public boolean isValidAsEncapsulated() {
        return isValid(true);
    }

    private boolean isValid(boolean encapsulated) {
        return true;
    }

    // Getters
    public boolean getIsTerrestrial() { return isTerrestrial; }

    // Setters
    public void setIsTerrestrial(boolean isTerrestrial) { this.isTerrestrial = isTerrestrial; }

    public void encapsulate() {
        _encapsulated = true;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        AnimalStateImpl state = (AnimalStateImpl)o;

        if (isTerrestrial != state.getIsTerrestrial()) return false;

        return true;
    }

    public boolean valueEquals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        AnimalStateImpl state = (AnimalStateImpl)o;

        if (isTerrestrial != state.getIsTerrestrial()) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = isTerrestrial ? 1 : 0;

        return result;
    }

    public int valueHashCode() {
        int result = isTerrestrial ? 1 : 0;

        return result;
    }

    @Override
    public String toString() {
        return "{isTerrestrial=" + isTerrestrial + "}";
    }
}
