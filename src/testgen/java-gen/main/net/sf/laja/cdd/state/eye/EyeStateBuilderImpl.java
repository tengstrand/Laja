package net.sf.laja.cdd.state.eye;

import java.math.BigDecimal;
import net.sf.laja.cdd.state.Certificate;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.sf.net
 */
public class EyeStateBuilderImpl implements EyeStateBuilder {
    private boolean encapsulated;
    private EyeState state;
    private final Certificate certificate;
    private boolean trusted;

    EyeStateBuilderImpl() {
        state = new EyeStateImpl();
        certificate = Certificate.get(this);
    }

    public EyeStateBuilderImpl(EyeState state) {
        this.state = state;
        certificate = Certificate.get(this);
        trusted = true;
    }

    public void withEyeWeightInGrams(int eyeWeightInGrams) {
        if (!trusted && encapsulated) throwEncapsulationException();
        state.setEyeWeightInGrams(eyeWeightInGrams);
    }

    public void withEyeWeightInGrams(String eyeWeightInGrams) {
        if (!trusted && encapsulated) throwEncapsulationException();
        state.setEyeWeightInGrams(Integer.valueOf(eyeWeightInGrams));
    }

    public void withColor(String color) {
        if (!trusted && encapsulated) throwEncapsulationException();
        state.setColor(color);
    }

    public void withColor(BigDecimal color) {
        if (!trusted && encapsulated) throwEncapsulationException();
        state.setColor(color.toString());
    }

    public void withColor(int color) {
        if (!trusted && encapsulated) throwEncapsulationException();
        state.setColor(String.valueOf(color));
    }

    public void withDecease(String decease) {
        if (!trusted && encapsulated) throwEncapsulationException();
        state.setDecease(decease);
    }

    public void withDecease(int decease) {
        if (!trusted && encapsulated) throwEncapsulationException();
        state.setDecease(String.valueOf(decease));
    }

    public void withHasEar(Boolean hasEar) {
        if (!trusted && encapsulated) throwEncapsulationException();
        state.setHasEar(hasEar);
    }

    private void throwEncapsulationException() {
        throw new IllegalStateException("The state has been encapsulated and can only be changed from within behaviour classes of type \"Eye\"");
    }

    public boolean isValid() {
        return state.isValid();
    }

    public Object as(EyeStateBehaviourFactory factory, Object... args) {
        Object encapsulatedObject = factory.create(state, args);
        if (!trusted) {
            encapsulated = true;
        }
        return encapsulatedObject;
    }

    public EyeState getEyeState(net.sf.laja.cdd.state.Certificate certificate) {
        return state;
    }
}
