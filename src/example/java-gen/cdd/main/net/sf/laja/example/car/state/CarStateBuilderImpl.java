package net.sf.laja.example.car.state;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.sf.net
 */
public class CarStateBuilderImpl implements CarStateBuilder {
    private Object encapsulator;
    private CarState state;
    private final Certificate certificate;
    private OwnerStateBuilder ownerStateBuilder;

    CarStateBuilderImpl() {
        state = new CarStateImpl();
        certificate = Certificate.get(this);
    }

    public CarStateBuilderImpl(CarState state) {
        this.state = state;
        certificate = Certificate.get(this);
    }

    public CarStateBuilderImpl(CarState state, Object encapsulator) {
        this(state);
        this.encapsulator = encapsulator;
    }

    public void withLengthInCentimeters(int lengthInCentimeters) {
        state.setLengthInCentimeters(lengthInCentimeters, encapsulator);
    }

    public void withName(String name) {
        state.setName(name, encapsulator);
    }

    public void withOwner(OwnerStateBuilder owner) {
        state.setOwner(owner.getOwnerState(certificate), encapsulator);
    }

    public void withColor(String color) {
        state.setColor(color, encapsulator);
    }

    public OwnerStateBuilder getOwnerStateBuilder() {
        if (ownerStateBuilder == null) {
            ownerStateBuilder = new OwnerStateBuilderImpl(state.getOwner());
        }
        return ownerStateBuilder;
    }

    public boolean isValid() {
        return state.isValid();
    }

    public Object as(CarStateBehaviourFactory factory, Object... args) {
        return factory.create(state, args);
    }

    public Object as(VehicleSizeStateBehaviourFactory factory, Object... args) {
        return factory.create(state, args);
    }

    public CarState getCarState(net.sf.laja.example.car.state.Certificate certificate) {
        return state;
    }

    public VehicleSizeState getVehicleSizeState(Certificate certificate) {
        return state;
    }
}
