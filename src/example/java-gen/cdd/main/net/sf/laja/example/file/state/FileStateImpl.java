package net.sf.laja.example.file.state;

import net.sf.laja.example.file.state.Certificate;
import net.sf.laja.example.file.state.Certificate;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.sf.net
 */
public class FileStateImpl implements FileState {
    protected String filename;

    private boolean _encapsulated = false;

    FileStateImpl() {
    }

    public static FileStateBuilder build() {
        return new FileStateBuilderImpl();
    }

    public static FileStateBuilder build(FileState state) {
        return new FileStateBuilderImpl(state);
    }

    public Certificate certificate() {
        return Certificate.get(this);
    }

    public boolean isValid() {
        return isValid(_encapsulated);
    }

    public boolean isValidAsEncapsulated() {
        return isValid(true);
    }

    private boolean isValid(boolean encapsulated) {
        if (filename == null) {
            return false;
        }
        return true;
    }

    // Getters
    public String getFilename() { return filename; }

    // Setters
    public void setFilename(String filename) { this.filename = filename; }

    public void encapsulate() {
        _encapsulated = true;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        FileStateImpl state = (FileStateImpl)o;

        if (filename != null ? !filename.equals(state.filename) : state.filename != null) return false;

        return true;
    }

    public boolean valueEquals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        FileStateImpl state = (FileStateImpl)o;

        if (filename != null ? !filename.equals(state.filename) : state.filename != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = filename != null ? filename.hashCode() : 0;

        return result;
    }

    public int valueHashCode() {
        int result = filename != null ? filename.hashCode() : 0;

        return result;
    }

    @Override
    public String toString() {
        return "{filename=" + filename + "}";
    }
}
