package net.sf.laja.example.repository.state;

import net.sf.laja.example.repository.state.CustomerStateImpl;
import net.sf.laja.example.repository.state.CustomerStateListImpl;
import net.sf.laja.example.repository.state.CustomerStateBuilderImpl;
import net.sf.laja.example.repository.state.AddressStateImpl;
import net.sf.laja.example.repository.state.AddressStateListImpl;
import net.sf.laja.example.repository.state.AddressStateBuilderImpl;
import net.sf.laja.example.repository.state.ZipcodeStateImpl;
import net.sf.laja.example.repository.state.ZipcodeStateListImpl;
import net.sf.laja.example.repository.state.ZipcodeStateBuilderImpl;

/**
 * Code generated by Laja - Do not change!
 * Version: laja2-006-alpha
 *
 *   http://laja.tengstrand.nu
 */
public final class Certificate {
    Certificate() {
    }

    private static Certificate certificate(Object state) {
        if (state == null) {
            throw new IllegalArgumentException();
        }
        return new Certificate();
    }

    public static Certificate get(CustomerStateImpl state) { return certificate(state); }
    public static Certificate get(CustomerStateListImpl state) { return certificate(state); }
    public static Certificate get(CustomerStateBuilderImpl state) { return certificate(state); }

    public static Certificate get(AddressStateImpl state) { return certificate(state); }
    public static Certificate get(AddressStateListImpl state) { return certificate(state); }
    public static Certificate get(AddressStateBuilderImpl state) { return certificate(state); }

    public static Certificate get(ZipcodeStateImpl state) { return certificate(state); }
    public static Certificate get(ZipcodeStateListImpl state) { return certificate(state); }
    public static Certificate get(ZipcodeStateBuilderImpl state) { return certificate(state); }
}
