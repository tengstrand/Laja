package net.sf.laja.example.car.state;

/**
 * Code generated by Laja - Do not change!
 *
 *   http://laja.tengstrand.nu
 */
public class TruckStateBuilderImpl implements TruckStateBuilder {
    private Object encapsulator;
    private TruckState state;
    private final Certificate certificate;
    private VehicleSizeStateBuilder sizeStateBuilder;
    private TruckTypeStateBuilder typeStateBuilder;
    private OwnerStateBuilder ownerStateBuilder;

    TruckStateBuilderImpl() {
        state = new TruckStateImpl();
        certificate = Certificate.get(this);
    }

    public TruckStateBuilderImpl(TruckState state) {
        this.state = state;
        certificate = Certificate.get(this);
    }

    public TruckStateBuilderImpl(TruckState state, Object encapsulator) {
        this(state);
        this.encapsulator = encapsulator;
    }

    public void withSize(VehicleSizeStateBuilder size) {
        state.setSize(size.getVehicleSizeState(certificate), encapsulator);
    }

    public void withWeightInKilograms(int weightInKilograms) {
        state.setWeightInKilograms(weightInKilograms, encapsulator);
    }

    public void withType(TruckTypeStateBuilder type) {
        state.setType(type.getTruckTypeState(certificate), encapsulator);
    }

    public void withColor(String color) {
        state.setColor(color, encapsulator);
    }

    public void withOwner(OwnerStateBuilder owner) {
        state.setOwner(owner.getOwnerState(certificate), encapsulator);
    }

    public VehicleSizeStateBuilder getSizeStateBuilder() {
        if (sizeStateBuilder == null) {
            sizeStateBuilder = new VehicleSizeStateBuilderImpl(state.getSize());
        }
        return sizeStateBuilder;
    }

    public TruckTypeStateBuilder getTypeStateBuilder() {
        if (typeStateBuilder == null) {
            typeStateBuilder = new TruckTypeStateBuilderImpl(state.getType());
        }
        return typeStateBuilder;
    }

    public OwnerStateBuilder getOwnerStateBuilder() {
        if (ownerStateBuilder == null) {
            ownerStateBuilder = new OwnerStateBuilderImpl(state.getOwner());
        }
        return ownerStateBuilder;
    }

    public boolean isValid() {
        return state.isValid();
    }

    public Object as(TruckBehaviourFactory factory, Object... args) {
        return factory.create(state, args);
    }

    public TruckState getTruckState(net.sf.laja.example.car.state.Certificate certificate) {
        return state;
    }

    @Override
    public int hashCode() {
        return state.hashCode();
    }
    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof TruckStateComparable)) return false;

        return true;
    }

    @Override
    public String toString() {
        return state.toString();
    }
}
