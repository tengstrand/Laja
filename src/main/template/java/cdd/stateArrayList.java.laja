#macro class()
  #header()
public class {stateArrayListClass} extends ArrayList<{stateClass}> implements {stateListClass} {
    private Object encapsulator;

    public {stateArrayListClass}() {
    }

    public {stateArrayListClass}(int size) {
        super(size);
    }

    public static {stateListClass} emptyList() {
        return new {stateArrayListClass}();
    }

    public Certificate certificate() {
        return Certificate.get(this);
    }

    public boolean isValid() {
        for ({stateClass} state : this) {
            if (!state.isValid()) {
                return false;
            }
        }
        return true;
    }

    public void encapsulate(Object encapsulator) {
        this.encapsulator = encapsulator;
    }

    public void throwExceptionIfNotEncapsulatedBy(Object encapsulator) {
        if (encapsulator != this.encapsulator) {
            if (encapsulator != null && this.encapsulator != null && encapsulator.getClass() == this.encapsulator.getClass()) {
                throw new IllegalStateException("The state has been encapsulated by another instance of " + this.encapsulator.getClass().getSimpleName() + " and can not be mutated by this behaviour instance");
            }
            String thatEcapsulator = encapsulator == null ? null : encapsulator.getClass().getSimpleName();
            String thisEcapsulator = this.encapsulator == null ? null : this.encapsulator.getClass().getSimpleName();
            throw new IllegalStateException("The state has been encapsulated by an instance of " + thisEcapsulator + " and can not be mutated by an instance of " + thatEcapsulator);
        }
    }
}
#end

#macro fileContent()
  #package()
import java.util.*;
  #importCertificate()

  #class()
#end

#set (filename = "{outputDir}/{stateArrayListClass}.java")
#generateFile(filename, fileContent())
