#macro class()

  #header()
#if (isFactory(classname))
public class {valueClass} {
#else
public class {valueClass} {
#end
    protected final {stateClass} state;
    protected {builderClass} stateBuilder;

    public {valueClass}({stateClass} state) {
        this.state = state;
        state.setEncapsulator(this);
    }

    public {valueClass}({stateClass} state, {builderClass} stateBuilder) {
        this.state = state;
        this.stateBuilder = stateBuilder;
        state.setEncapsulator(this);
    }

    #elementMethods()

    @Override
    public boolean equals(Object o) {
        if (o == null || getClass() != o.getClass()) return false;

        return state.valueEquals((({valueClass})o).state);
    }

    @Override
    public int hashCode() {
        return state.valueHashCode();
    }

    @Override
    public String toString() {
        return getClass().getSimpleName() + state;
    }
}
#end

#macro fileContent()
  #package()
  #importCertificate()
  #class()
#end

#set (filename = "{outputDir}/{valueClass}.java")
#generateFile(filename, fileContent())
