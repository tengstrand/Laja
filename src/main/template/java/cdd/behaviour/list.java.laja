
#macro fileContent()
package {packagename};

import java.util.List;
  #listImports()

public interface {listInterface} extends List<{entryClass}> {
  #foreach (m in asBehaviour.asMethods where m.methodName != method.methodName)
    #setArgumentsAndParameters(m, false)
    {m.listInterface} {m.methodName}List({parameters});
  #end
}
#end

#foreach (method in behaviour.asMethods)
  #prepareList(outputDir, outDir)
  #setArgumentsAndParameters(method, true)

  #if (!processedLists.contains(listInterface))
    #processedLists.add(listInterface)
    #if (!directoryExists(listOutputDir))
      #createDirectoryPath(listOutputDir)
    #end
    #set (filename = "{listOutputDir}/{listInterface}.java")
    #generateFile(filename, fileContent())
  #end
#end
