
#macro fileContent()
package {packagename};

import java.util.Set;
  #setImports()

public interface {setInterface} extends Set<{entryClass}> {
  #foreach (m in asBehaviour.asMethods where m.methodName != method.methodName)
    #setArgumentsAndParameters(m, false)
    {m.setInterface} {m.methodName}Set({parameters});
  #end
}
#end

#foreach (method in behaviour.asMethods)
  #prepareCollection(outputDir, outDir)
  #setArgumentsAndParameters(method, true)

  #if (!processedSets.contains(setInterface))
    #processedSets.add(setInterface)
    #if (!directoryExists(collectionOutputDir))
      #createDirectoryPath(collectionOutputDir)
    #end
    #set (filename = "{collectionOutputDir}/{setInterface}.java")
    #generateFile(filename, fileContent())
  #end
#end
