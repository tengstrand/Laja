
#macro class()
public class {setEncapsulatorClass} implements Iterable<{encapsulatorClass}> {
    public {stateSetBuilder} stateSetBuilder = new {stateSetBuilder}();
    private List<{encapsulatorClass}> encapsulators = new ArrayList<{encapsulatorClass}>();

    public void add({encapsulatorClass} encapsulator) {
        encapsulators.add(encapsulator);
        stateSetBuilder.add(encapsulator.builder);
    }

    public {setEncapsulatorClass}({encapsulatorClass}... encapsulators) {
        this.encapsulators.addAll(Arrays.asList(encapsulators));

        for ({encapsulatorClass} encapsulator : encapsulators) {
            stateSetBuilder.add(encapsulator.builder);
        }
    }

    public Iterator<{encapsulatorClass}> iterator() {
        return encapsulators.iterator();
    }
  #foreach (method in behaviour.asMethods where method.isFactory)

    #setArgumentsAndParameters(method, false)
    public {method.setInterface} {method.methodName}Set({parameters}) {
        List<{method.returnclass}> result = new ArrayList<{method.returnclass}>();

        for ({encapsulatorClass} encapsulator : encapsulators) {
            result.add(encapsulator.{method.methodName}({arguments}));
        }
        return new {method.hashSetClass}(result);
    }
  #end

    public boolean isValid() {
        for ({encapsulatorClass} encapsulator : encapsulators) {
            if (!encapsulator.isValid()) {
                return false;
            }
        }
        return true;
    }

    @Override
    public String toString() {
        return stateSetBuilder.toString();
    }
}
#end

#macro importsList()
  #foreach (method in behaviour.asMethods where method.isFactory)
    #foreach (import in behaviour.imports where import.endsWithType(method.returnclass))
import {import.fullclassname}List;
import {import.fullclassname}ArrayList;
     #end
  #end
#end

#macro fileContent()
package {behaviour.packagename};

import java.util.*;
    #importsBegin()
    #importsList()
    #importsEnd()
    #class()
#end

#if (behaviour.isFactory)
  #set (filename = "{outputDir}/{setEncapsulatorClass}.java")
  #generateFile(filename, fileContent())
#end
