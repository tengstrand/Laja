#namespace creator

#macro assertThat()
        public void assertThat(boolean condition, String attribute) {
            assertThat(condition, attribute, (attribute == null ? "" : "invalid-" + attribute.toLowerCase()));
        }

        public void assertThat(boolean condition, String attribute, String errorType) {
            if (!condition) {
                ValidationErrors.Builder errors = ValidationErrors.builder();
                errors.addError(state, attribute, errorType, "");
                throw new {stateException}(errors.build());
            }
        }
#end

#macro behaviour()
    // --- Behaviour ---

    public static class {behaviour} {
        public final {immutableState} state;

        public {behaviour}({immutableState} state) {
            this.state = state;
        }

 #assertThat()

        @Override public boolean equals(Object that) {
            if (this == that) return true;
            if (that == null || !(that instanceof {behaviour})) return false;

            return state.equals((({behaviour})that).state);
        }

        @Override public int hashCode() {
            return state.hashCode();
        }

        @Override public String toString() {
            return getClass().getSimpleName() + state;
        }
    }

#end
