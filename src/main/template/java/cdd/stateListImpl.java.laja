#macro class()
  #header()
public class {stateListImplClass} extends ArrayList<{stateClass}> implements {stateListClass} {
    private Object encapsulator;

    public {stateListImplClass}() {
    }

    public {stateListImplClass}(int size) {
        super(size);
    }

    public static {stateListClass} emptyList() {
        return new {stateListImplClass}();
    }

    public Certificate certificate() {
        return Certificate.get(this);
    }

    public boolean isValid() {
        for ({stateClass} state : this) {
            if (!state.isValid()) {
                return false;
            }
        }
        return true;
    }

    public void encapsulate(Object encapsulator) {
        this.encapsulator = encapsulator;
    }

    public void throwExceptionIfNotEncapsulatedBy(Object encapsulator) {
        if (encapsulator != this.encapsulator) {
            throw new IllegalStateException("The state has been encapsulated by an instance of " + this.encapsulator.getClass().getSimpleName() + " and can not be operated by " + encapsulator.getClass().getSimpleName());
        }
    }
}
#end

#macro fileContent()
  #package()
import java.util.*;
  #importCertificate()

  #class()
#end

#set (filename = "{outputDir}/{stateListImplClass}.java")
#generateFile(filename, fileContent())
