
#set (packagename = state.packagename)
#set (classname = state.classname)
#set (classvariable = state.classvariable)
#set (mutableClass = state.mutableClass)
#set (attributes = state.attributes)
#set (imports = state.imports)

#macro imports()

  #if (imports.hasImports)
    #foreach (import in imports)
{import.statement}
    #end

  #end
#end

#macro attributes()
  #foreach (attribute in attributes)
    public final {attribute.type} {attribute.variable};{attribute.comment}
  #end
#end

#macro constructor()
    public {classname}(
  #set (iterator = attributes.iterator)
  #set (space = " ")
  #while (iterator.hasNext)
    #set (attribute = iterator.next)
    #if (iterator.hasNext)
            {attribute.type} {attribute.variable},
    #else
            {attribute.type} {attribute.variable}) {
    #end
  #end
  #foreach (attribute in attributes)
        this.{attribute.variable} = {attribute.variable};
  #end
    }
#end

#macro exceptions()

    public static class Illegal{classname}Exception extends IllegalStateException { }
    public static class Illegal{classname}IsNullException extends Illegal{classname}Exception { }

  #foreach (attribute in attributes)
    public static class Illegal{classname}{attribute.variableAsClass}Exception extends Illegal{classname}Exception { }
  #end

  #foreach (attribute in attributes)
    public static class Illegal{classname}{attribute.variableAsClass}IsNullException extends Illegal{classname}IsNullException { }
  #end
#end

#macro withMethods()

  #set (parameterList = "")
  #set (delimiter = "")
  #foreach (attribute in attributes)
    #set (parameterList = "{parameterList}{delimiter}{attribute.variable}")
    #set (delimiter = ", ")
  #end
  #foreach (attribute in attributes)
    public {classname} with{attribute.variableAsClass}({attribute.type} {attribute.variable}) { return new {classname}({parameterList}); }
  #end
#end

#macro asMutableState()

    public {mutableClass} asMutableState() {
        return new {mutableClass}(
  #set (iterator = attributes.iterator)
  #while (iterator.hasNext)
    #set (attribute = iterator.next)
    #if (iterator.hasNext)
            {attribute.variable},
    #else
            {attribute.variable});
    #end
  #end
    }
#end

#write "C:/Source/IDEA/Laja/src/testgen/java-new/main/net/sf/laja/cdd/state/XState.txt"
package {packagename};
  #imports()
public class {classname} {
  #attributes()

    // Generated code goes here...

  #constructor()
  #exceptions()
  #withMethods()
  #asMutableState()
}
#end
