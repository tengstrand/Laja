In CDD all state state definitions has a version number, if not given, the version number is defaulted to 1:

<source>
import net.sf.laja.cdd.annotation.State;

@State
public class PersonState {
    public final int ssn;
    public final String name;
</source>


...which is equivalent to:

<source>
import net.sf.laja.cdd.annotation.State;

@State(version = 1)
public class PersonState {
    public final int ssn;
    public final String name;
</source>


The attribute ''version'' has the default value of 1 in the definition of the annotation @State.
The version number is propagated (when generated) to the state types ''mutable'' and ''string'', like this:

<source>
@State(version = 3)
public class PersonState implements ImmutableState {
    ...

    @State(version = 3, type = "mutable")
    public static class PersonMutableState implements MutableState {
        ...
    }

    @State(version = 3, type = "string")
    public static class PersonStringState implements StringState {
        ...
    }
}
</source>


The idea of ??versioning state is to facilitate integration between systems!


