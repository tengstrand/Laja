CDD uses [http://en.wikipedia.org/wiki/Object_composition composition], also known as [http://en.wikipedia.org/wiki/Domain-driven_design#Building_blocks_of_DDD aggregate] in [http://en.wikipedia.org/wiki/Domain-driven_design DDD], when building more complex objects:

[[File:CDD-state-composition.png|180px]]


This is best explained by an example.
Create states for ''address'':
<source>
package com.myproject;

public class AddressState {
    String streetName;
    int streetNumber;
    int zipcode;
}
</source>


...and ''person'' + generate:
<source>
package com.myproject;

import net.sf.laja.cdd.annotation.Key;

public class PersonState {
    @Key int ssn;
    String givenName;
    String surname;
    AddressState address;
}
</source>


Note that the attribute ''address'' should be named ''address'' and not ''addressState''.


...add creators for ''address'':
<source>
package com.myproject;

public class AddressCreator {
    AddressState state;
}
</source>

...and ''person'':
<source>
package com.myproject;

public class PersonCreator {
    private PersonState state;
}
</source>


...regenerate and execute (make sure ''AddressCreator.createAddress'' and ''PersonCreator.createPerson'' are included):
<source>
PersonState person = createPerson()
        .ssn(112233)
        .givenName("Carl")
        .surname("Carlson")
        .address(createAddress().streetName("First street").streetNumber(123).zipcode(75432))
        .asState();

System.out.println(person);
</source>


'''output''':
<source>
{ssn=112233, givenName="Carl", surname="Carlson", address={streetName="First street", streetNumber=123, zipcode=75432}}
</source>


Substates can include other substates (including itself if representing a parent/child relationship). We could for example let ''AddressState'' include ''ZipcodeState'', but we leave that exercise to the reader!
If you're curious about how to work with composition, you can go directly to the section [[Composition]].


[[Define state|< Back]]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
[[Default values|Next >]]
