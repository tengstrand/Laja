''Context'' is a key concepts in CDD alongside ''state'' and ''behaviour''.

To consider ''context'' as a first-class citizens allow us to reason about software design in a more concise way.


Context is divided into two parts where the first part ''context area'' has to do with the task to be performed and its location in the system:


[[File:CDD-context-area.png|400px]]


The context area is actively selected or [[Context switching|switched]] by the developer when the code is written (''compile time'').

If we look at the [https://github.com/tengstrand/Laja/tree/master/src/example/java/cdd/main/net/sf/laja/example/account account] example, it has two
different account contexts, ''source'' and ''destination'':
<source>
SourceAccount sourceAccount = Account.balance(1000).asSourceAccount();
DestinationAccount destinationAccount = Account.balance(100).asDestinationAccount();
</source>


The second type of context is optional and is something that can vary at ''runtime'' within a ''context area'' depending on a ''context variable''
like ''configuration'' in [https://github.com/tengstrand/Laja/tree/master/src/example/java/cdd/main/net/sf/laja/example/computer this] example (but hard coded here):
<source>
Amiga standardAmiga = AmigaFactory.owner("Joakim").asAmiga(Configuration.STANDARD);
Amiga fastAmiga = AmigaFactory.owner("Riku").asAmiga(Configuration.FAST);
</source>

When the configuration is set to ''STANDARD'' we will get a an [http://en.wikipedia.org/wiki/Amiga_500 Amiga 500],
but when set to ''FAST'' we will get an [http://en.wikipedia.org/wiki/Amiga_4000 Amiga 4000].


The selected context is based on a ''context variable'' such as:
* Current user role
* Current time
* Configurations, e.g. values from file or database


[[File:CDD-context-runtime.png|170px]]


Different aspects of ''context'' will gradually be covered by the rest of this documentation.


[[Classes and objects|< Back]]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
[[State|Next >]]
