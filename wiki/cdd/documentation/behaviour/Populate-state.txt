Sometimes one or more attributes are associated with the behaviour representation, indicated by the keyword ''hide'':
<source>
package com.myproject.state;

public class PersonStateTemplate {
    String hairColor; // (hide)
    String givenName;
    String surname;
}
</source>

In this case the ''hairColor'' should be populated by the behaviour representations.


Regenerate and add behaviour classes for grey and red haired persons:
<source>
package com.myproject.behaviour;

import com.myproject.state.PersonState;

public class GreyHairedPerson extends PersonFactory {
    public GreyHairedPerson(PersonState state) {
        super(state);
        state.setHairColor("Grey");
    }

    // (factory)
    public GreyHairedPerson asGreyHairedPerson() {
        return new GreyHairedPerson(state);
    }
}
</source>

<source>
package com.myproject.behaviour;

import com.myproject.state.PersonState;

public class RedHairedPerson extends PersonFactory {
    public RedHairedPerson(PersonState state) {
        super(state);
        state.setHairColor("Red");
    }

    // (factory)
    public RedHairedPerson asRedHairedPerson() {
        return new RedHairedPerson(state);
    }
}
</source>

...to let ''GreyHairedPerson'' and ''RedHairedPerson'' act as factories we inherit from the corresponding factory classes:
<source>
...
public class GreyHairedPerson extends GreyHairedPersonFactory {
...
</source>

<source>
...
public class RedHairedPerson extends RedHairedPersonFactory {
...
</source>

...regenerate and execute (note that ''hairColor'' is excluded from the chained creator):

<source>
    GreyHairedPerson hans = GreyHairedPerson.givenName("Hans").surname("Alfredson").asGreyHairedPerson();
    RedHairedPerson tage = RedHairedPerson.givenName("Tage").surname("Danielsson").asRedHairedPerson();

    System.out.println(hans);
    System.out.println(tage);
</source>

...and we get the output (with the hair colors set):
<source>
GreyHairedPerson{hairColor='Grey', givenName='Hans', surname='Alfredson'}
RedHairedPerson{hairColor='Red', givenName='Tage', surname='Danielsson'}
</source>


[[Factories|< Back]]
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
[[Populate substate|Next >]]
